package testClient;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import Request.Request;

import java.io.*;
import java.net.*;

public class TestClient {
  private PrintWriter out;
  private BufferedReader in;
  private Socket socket;
  private int PORT = 3000;

  public void go() throws IOException {
    socket = createSocket();
    System.out.println("TestClient connected");

    out = createWriter();
    in = createReader();

    makeRequest(new Request().request("POST", "/echo", "goodbye"));
    readResponse(in);
    System.out.println("I never reach here");
    closeConnection(in, out);
    socket.close();
  }

  public void readResponse(BufferedReader in) {
    try {
//      String line;
//      while((line = in.readLine()) != null) {
//        System.out.println(line);
//      }
      int line = 0;
      while (line != -1) {
        line = in.read();
        char c = (char) line;
        System.out.print(c);
      }

    } catch (
      IOException ex) {
      System.out.println(ex);
      System.out.println("Read failed");
      System.exit(-1);
    }

}

  public void makeRequest(String request) throws IOException {
    out.write((request));
    out.flush();
  }

  public Socket createSocket() {
    Socket socket = null;
    try {
      socket = new Socket("127.0.0.1", PORT);
    } catch (IOException ex) {
      System.out.println("Could not listen on port " + PORT);
      ex.printStackTrace();
      System.exit(-1);
    }
    return socket;
  }

  public BufferedReader createReader() throws IOException {
    return new BufferedReader(new InputStreamReader(socket.getInputStream()));
  }

  public PrintWriter createWriter() throws IOException {
    return new PrintWriter(new OutputStreamWriter(socket.getOutputStream()));
  }

  public void closeConnection(BufferedReader in, PrintWriter out) throws IOException {
    in.close();
    out.close();
    socket.close();
    System.out.println("Connection closed");
  }

  public static void main(String[] args) throws IOException {
    new TestClient().go();
  }
}
