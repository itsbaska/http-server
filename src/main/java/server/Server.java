package server;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import Response.Response;

import java.io.*;
import java.net.*;
import java.util.ArrayList;

import static com.google.common.io.ByteStreams.toByteArray;

public class Server {
  private PrintWriter out;
  private BufferedReader in;
  private ServerSocket serverSocket;
  private int PORT = 3000;
  private Socket clientSocket;

  public void go() throws IOException {
    serverSocket = createSocket();

    while (true) {
      clientSocket = clientSocket(serverSocket);

      out = createWriter(clientSocket);
      in = createReader(clientSocket);
      handleRequest(in, out);
      closeConnection(in, out);
      clientSocket.close();
      System.out.println("Closing connection with testClient: " + clientSocket.getInetAddress());
    }
  }

  public void handleRequest(BufferedReader in, PrintWriter out) {
    try {
      Response response = new Response();
      String line;
      ArrayList<String> responseText = new ArrayList();
      while ((line = in.readLine()) != null) {
        System.out.println(line);
        responseText.add(line);
          if (line.toLowerCase().contains("GET".toLowerCase())) {
            out.write((response.res200("")));
          } else if (line.toLowerCase().contains("POST".toLowerCase())) {
            if (line.toLowerCase().contains("hello".toLowerCase())) {
              out.write((response.res200("hello")));
            } else if (line.toLowerCase().contains("POST".toLowerCase())) {
              out.write((response.res200("goodbye")));
            }
            out.flush();
        }
      }
    } catch (IOException ex) {
      System.out.println(ex);
      System.out.println("Read failed");
      System.exit(-1);
    }
  }

  public Socket clientSocket(ServerSocket serverSocket) {
    Socket socket = null;
    try {
      socket = serverSocket.accept();
      System.out.println("Accepted connection from testClient: " + socket.getRemoteSocketAddress());
    } catch (IOException ex) {
      System.out.println(ex);
      System.out.println("Accept failed: " + PORT);
      System.exit(-1);
    }
    return socket;
  }

  public ServerSocket createSocket() {
    ServerSocket serverSocket = null;
    try {
      serverSocket = new ServerSocket(PORT);
    } catch (IOException ex) {
      System.out.println("Could not listen on port " + PORT);
      ex.printStackTrace();
      System.exit(-1);
    }
    return serverSocket;
  }

  public BufferedReader createReader(Socket clientSocket) throws IOException {
    return new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
  }

  public PrintWriter createWriter(Socket clientSocket) throws IOException {
    return new PrintWriter(new OutputStreamWriter(clientSocket.getOutputStream()));
  }

  public void closeConnection(BufferedReader in, PrintWriter out) throws IOException {
    in.close();
    out.close();
  }

  public static void main(String[] args) throws IOException {
    new Server().go();
  }
}
