package server;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.io.*;
import java.net.*;

public class Server {
  public int PORT = 3000;

  public void go() {
    ServerSocket serverSocket = createSocket();
    while (true) {
      Socket clientSocket = clientSocket(serverSocket);
      listenSocketBufferedReader(clientSocket, "./content/hello-world.html");
      closeSocket(clientSocket);
    }
  }

  public void closeSocket(Socket clientSocket) {
    try {
      System.out.println("Closing connection with client: " + clientSocket.getInetAddress());
      clientSocket.close();
    } catch (IOException e) {
      System.out.println("Closing socket failed");
      System.exit(-1);
    }
  }

  public void listenSocketBufferedReader(Socket clientSocket, String file) {
    Response response = new Response();
    try {
      PrintStream outputStream = new PrintStream(clientSocket.getOutputStream());
      BufferedReader reader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
      String line = reader.readLine();
      while (line != null) {
        System.out.println(line);
        if (line.equals("GET /echo HTTP/1.1")) {
          outputStream.write((response.res200("")).getBytes("UTF-8"));
        } else if (line.equals("POST /echo HTTP/1.1")) {
          outputStream.write((response.res200("hello") + "hello").getBytes("UTF-8"));
        }
        line = reader.readLine();
      }

      outputStream.close();
      reader.close();
    } catch (IOException e) {
      System.out.println(e);
      System.out.println("Read failed");
      System.exit(-1);
    }
  }

  public Socket clientSocket(ServerSocket serverSocket) {
    Socket socket2 = null;
    try {
      socket2 = serverSocket.accept();
      System.out.println("Accepted connection from client: " + socket2.getRemoteSocketAddress());
    } catch (IOException ex) {
      System.out.println("Accept failed: " + PORT);
      System.exit(-1);
    }
    return socket2;
  }

  public ServerSocket createSocket() {
    ServerSocket serverSocket2 = null;
    try {
      serverSocket2 = new ServerSocket(PORT);
    } catch (IOException ex) {
      System.out.println("Could not listen on port " + PORT);
      ex.printStackTrace();
      System.exit(-1);
    }
    return serverSocket2;
  }

  public static void main(String[] args) {
    Server server = new Server();
    server.go();
  }
}
