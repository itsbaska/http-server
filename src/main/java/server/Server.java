package server;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import Response.Response;

import java.io.*;
import java.net.*;

public class Server {
  private PrintStream out;
  private BufferedReader in;
  private ServerSocket serverSocket;
  private int PORT = 3000;
  private Socket clientSocket;

  public Server() throws IOException {
    serverSocket = createSocket();
    clientSocket = clientSocket();
    out = new PrintStream(clientSocket.getOutputStream());
    in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
  }

  public void go() {
    while (true) {
      listenSocketBufferedReader(clientSocket);
      closeSocket(clientSocket);
    }
  }

  public void closeSocket(Socket clientSocket) {
    try {
      System.out.println("Closing connection with client: " + clientSocket.getInetAddress());
      clientSocket.close();
    } catch (IOException e) {
      System.out.println("Closing socket failed");
      System.exit(-1);
    }
  }

  public void listenSocketBufferedReader(Socket clientSocket) {
    try {
      handleRequest(in, out);
      out.close();
      in.close();
    } catch (IOException ex) {
      System.out.println(ex);
      System.out.println("Read failed");
      System.exit(-1);
    }
  }
  public void handleRequest(BufferedReader in, PrintStream out) {
    try {
      Response response = new Response();
      String line = in.readLine();
      while (line != null) {
        System.out.println(line);
        if (line.toLowerCase().contains("GET".toLowerCase())) {
          out.write((response.res200("")).getBytes("UTF-8"));
        } else if (line.toLowerCase().contains("POST".toLowerCase())) {
          out.write((response.res200("hello") + "hello").getBytes("UTF-8"));
        }
        out.flush();
        line = in.readLine();
      }
    } catch (IOException ex) {
      System.out.println(ex);
      System.out.println("Read failed");
      System.exit(-1);
    }
  }

  public Socket clientSocket() {
    Socket socket = null;
    try {
      socket = serverSocket.accept();
      System.out.println("Accepted connection from client: " + socket.getRemoteSocketAddress());
    } catch (IOException ex) {
      System.out.println(ex);
      System.out.println("Accept failed: " + PORT);
      System.exit(-1);
    }
    return socket;
  }

  public ServerSocket createSocket() {
    ServerSocket serverSocket = null;
    try {
      serverSocket = new ServerSocket(PORT);
    } catch (IOException ex) {
      System.out.println("Could not listen on port " + PORT);
      ex.printStackTrace();
      System.exit(-1);
    }
    return serverSocket;
  }

  public static void main(String[] args) throws IOException {
    new Server().go();
  }
}
